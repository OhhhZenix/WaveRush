name: CI
env:
  CARGO_TERM_COLOR: always
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get install libudev-dev
          sudo apt-get install pkg-config 
          sudo apt-get install libx11-dev
          sudo apt-get install libxi-dev
          sudo apt-get install libgl1-mesa-dev
          sudo apt-get install libasound2-dev
      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  rustfmt:
    name: Rustfmt Check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup component add rustfmt
      - run: cargo fmt -- --check
  clippy:
    name: Clippy Check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
